a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
douglas_fir_out <- nloptr(
x0=0.1,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=10,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=10,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=50,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
#contain within obj function
#choice = Big T
#baseline rotation length without constraint
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a, b, c, alpha, scc, p, rho, cost) {
#state <- vector(mode="numeric", length=0)
#benefits<- vector(mode="numeric", length=0)
Q = exp(a-(b/choice))
# state[1] = choice[1]
# benefits[1]=(p*Q*exp(-discount*state[1])-c)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
#t=seq(from=0, time=period)
#npv=sum(benefits)
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
x0=,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
douglas_fir_out <- nloptr(
x0=10,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=0.4823,
b=823,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=10,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=11.94,
b=-104.93,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=50,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=11.95,
b=-104.93,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=25,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=11.95,
b=-104.93,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
douglas_fir_out <- nloptr(
x0=17,
opts=options,
eval_f=douglas_fir_obj,
lb=0,
a=11.95,
b=-104.93,
c=46.46,
rho=0.05,
scc=185,
cost=335,
p=683.58,
alpha=0.213
)
round(douglas_fir_out$solution, 3)
#round(-douglas_fir_out$option, 3)
# Baseline Objective Function -- No Carbon Benefit
objective_baseline <- function(choice, a, b, c, p, delta)
{
Q = exp(a - b / choice)
benefits = p * Q * exp(-delta * choice) - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
output_baseline = nloptr(x0 = 10,
eval_f = objective_baseline,
lb = 0,
opts = options,
a = 11.9466,
b = 104.9291,
c = 335,
p = 683.50,
delta = 0.05)
print(output_baseline$solution)
# Objective Function Including Carbon Benefit
objective_carbon <- function(choice, a1, b1, a2, b2, c, p, rho, alpha, scc)
{
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
benefits = rho^choice * p * Q + 7403.06 - rho^choice * scc * alpha * C - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
output_carbon = nloptr(x0 = 10,
eval_f = objective_carbon,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190)
print(output_carbon$solution)
#choice = Big T
#baseline rotation length without constraint
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
nloptr(x0 = 10,
eval_f = objective_carbon,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
)
douglas_fir_out <- nloptr(
nloptr(x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
)
#choice = Big T
#baseline rotation length without constraint
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
nloptr(x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
)
#choice = Big T
#baseline rotation length without constraint
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
nloptr(x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
#choice = Big T
#baseline rotation length without constraint
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
#benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
benefits = rho^choice * p * Q + 7403.06 - rho^choice * scc * alpha * cost - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
# no carbon benefit
objective_baseline <- function(choice, a, b, c, p, delta)
{
Q = exp(a - b / choice)
benefits = p * Q * exp(-delta * choice) - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
output_baseline = nloptr(x0 = 10,
eval_f = objective_baseline,
lb = 0,
opts = options,
a = 11.9466,
b = 104.9291,
c = 335,
p = 683.50,
delta = 0.05)
print(output_baseline$solution)
#choice = Big T
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
C = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
#benefits = rho^choice * p * Q + 7403.06 - rho^choice * scc * alpha * cost - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
douglas_fir_out <- nloptr(
x0 = 15,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
douglas_fir_out <- nloptr(
x0 = 45,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
#choice = Big T
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho, cost) {
Q = exp(a1 - b1 / choice)
cost = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
#benefits = rho^choice * p * Q + 7403.06 - rho^choice * scc * alpha * cost - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190,
cost = 335)
round(douglas_fir_out$solution, 3)
#choice = Big T
#LA will buy offsets at x price for timbre managers to leave stand for x time longer
#objective function LFG
douglas_fir_obj <- function(choice, a1, b1, a2, b2, c, alpha, scc, p, rho) {
Q = exp(a1 - b1 / choice)
cost = exp(a2 - b2 / choice)
benefits = (rho^choice)*p*(Q)+(rho^c)*c*scc-(rho^c)*scc*alpha*c-cost
#benefits = rho^choice * p * Q + 7403.06 - rho^choice * scc * alpha * cost - c
return(-benefits)
}
options=list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-8,maxeval=16000)
douglas_fir_out <- nloptr(
x0 = 10,
eval_f = douglas_fir_obj,
lb = 0,
opts = options,
a1 = 11.9466,
b1 = 104.9291,
a2 = 4.729,
b2 = 14.559,
c = 335,
p = 683.50,
rho = 1/1.05,
alpha = 0.21330949,
scc = 190)
round(douglas_fir_out$solution, 3)
